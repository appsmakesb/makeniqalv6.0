// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TactBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TabItem tabCalls;

  @NonNull
  public final TabItem tabChats;

  @NonNull
  public final TabItem tabStatus;

  @NonNull
  public final TabLayout tablayout;

  @NonNull
  public final ViewPager viewPager;

  private TactBinding(@NonNull LinearLayout rootView, @NonNull TabItem tabCalls,
      @NonNull TabItem tabChats, @NonNull TabItem tabStatus, @NonNull TabLayout tablayout,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.tabCalls = tabCalls;
    this.tabChats = tabChats;
    this.tabStatus = tabStatus;
    this.tablayout = tablayout;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TactBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tabCalls;
      TabItem tabCalls = ViewBindings.findChildViewById(rootView, id);
      if (tabCalls == null) {
        break missingId;
      }

      id = R.id.tabChats;
      TabItem tabChats = ViewBindings.findChildViewById(rootView, id);
      if (tabChats == null) {
        break missingId;
      }

      id = R.id.tabStatus;
      TabItem tabStatus = ViewBindings.findChildViewById(rootView, id);
      if (tabStatus == null) {
        break missingId;
      }

      id = R.id.tablayout;
      TabLayout tablayout = ViewBindings.findChildViewById(rootView, id);
      if (tablayout == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new TactBinding((LinearLayout) rootView, tabCalls, tabChats, tabStatus, tablayout,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
