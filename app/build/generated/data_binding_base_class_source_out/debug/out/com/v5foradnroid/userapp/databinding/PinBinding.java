// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PinBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout mainlayout;

  @NonNull
  public final Button pinVerBtn;

  @NonNull
  public final EditText verPin;

  private PinBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout mainlayout,
      @NonNull Button pinVerBtn, @NonNull EditText verPin) {
    this.rootView = rootView;
    this.mainlayout = mainlayout;
    this.pinVerBtn = pinVerBtn;
    this.verPin = verPin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PinBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.pin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout mainlayout = (LinearLayout) rootView;

      id = R.id.pin_verBtn;
      Button pinVerBtn = ViewBindings.findChildViewById(rootView, id);
      if (pinVerBtn == null) {
        break missingId;
      }

      id = R.id.ver_pin;
      EditText verPin = ViewBindings.findChildViewById(rootView, id);
      if (verPin == null) {
        break missingId;
      }

      return new PinBinding((LinearLayout) rootView, mainlayout, pinVerBtn, verPin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
