// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SmsacBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button cont;

  @NonNull
  public final LinearLayout displayactivityLinearLayout1;

  @NonNull
  public final LinearLayout hd;

  @NonNull
  public final LinearLayout hdt;

  @NonNull
  public final LinearLayout hdtr;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final EditText number;

  @NonNull
  public final EditText pin;

  @NonNull
  public final Button sub;

  @NonNull
  public final EditText text;

  @NonNull
  public final LinearLayout top;

  @NonNull
  public final RelativeLayout toptop;

  private SmsacBinding(@NonNull RelativeLayout rootView, @NonNull Button cont,
      @NonNull LinearLayout displayactivityLinearLayout1, @NonNull LinearLayout hd,
      @NonNull LinearLayout hdt, @NonNull LinearLayout hdtr,
      @NonNull HorizontalScrollView horizontalScrollView, @NonNull EditText number,
      @NonNull EditText pin, @NonNull Button sub, @NonNull EditText text, @NonNull LinearLayout top,
      @NonNull RelativeLayout toptop) {
    this.rootView = rootView;
    this.cont = cont;
    this.displayactivityLinearLayout1 = displayactivityLinearLayout1;
    this.hd = hd;
    this.hdt = hdt;
    this.hdtr = hdtr;
    this.horizontalScrollView = horizontalScrollView;
    this.number = number;
    this.pin = pin;
    this.sub = sub;
    this.text = text;
    this.top = top;
    this.toptop = toptop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SmsacBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SmsacBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.smsac, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SmsacBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cont;
      Button cont = ViewBindings.findChildViewById(rootView, id);
      if (cont == null) {
        break missingId;
      }

      id = R.id.displayactivityLinearLayout1;
      LinearLayout displayactivityLinearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (displayactivityLinearLayout1 == null) {
        break missingId;
      }

      id = R.id.hd;
      LinearLayout hd = ViewBindings.findChildViewById(rootView, id);
      if (hd == null) {
        break missingId;
      }

      id = R.id.hdt;
      LinearLayout hdt = ViewBindings.findChildViewById(rootView, id);
      if (hdt == null) {
        break missingId;
      }

      id = R.id.hdtr;
      LinearLayout hdtr = ViewBindings.findChildViewById(rootView, id);
      if (hdtr == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.number;
      EditText number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.pin;
      EditText pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.sub;
      Button sub = ViewBindings.findChildViewById(rootView, id);
      if (sub == null) {
        break missingId;
      }

      id = R.id.text;
      EditText text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.top;
      LinearLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      RelativeLayout toptop = (RelativeLayout) rootView;

      return new SmsacBinding((RelativeLayout) rootView, cont, displayactivityLinearLayout1, hd,
          hdt, hdtr, horizontalScrollView, number, pin, sub, text, top, toptop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
