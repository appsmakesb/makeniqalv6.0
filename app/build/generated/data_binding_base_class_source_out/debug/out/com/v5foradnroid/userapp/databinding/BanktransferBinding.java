// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BanktransferBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText amount;

  @NonNull
  public final EditText branch;

  @NonNull
  public final TextView error;

  @NonNull
  public final Spinner flot;

  @NonNull
  public final LinearLayout mainlayout;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText number;

  @NonNull
  public final EditText pin;

  @NonNull
  public final EditText remark;

  @NonNull
  public final Button sub;

  private BanktransferBinding(@NonNull LinearLayout rootView, @NonNull EditText amount,
      @NonNull EditText branch, @NonNull TextView error, @NonNull Spinner flot,
      @NonNull LinearLayout mainlayout, @NonNull EditText name, @NonNull EditText number,
      @NonNull EditText pin, @NonNull EditText remark, @NonNull Button sub) {
    this.rootView = rootView;
    this.amount = amount;
    this.branch = branch;
    this.error = error;
    this.flot = flot;
    this.mainlayout = mainlayout;
    this.name = name;
    this.number = number;
    this.pin = pin;
    this.remark = remark;
    this.sub = sub;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BanktransferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BanktransferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.banktransfer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BanktransferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      EditText amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.branch;
      EditText branch = ViewBindings.findChildViewById(rootView, id);
      if (branch == null) {
        break missingId;
      }

      id = R.id.error;
      TextView error = ViewBindings.findChildViewById(rootView, id);
      if (error == null) {
        break missingId;
      }

      id = R.id.flot;
      Spinner flot = ViewBindings.findChildViewById(rootView, id);
      if (flot == null) {
        break missingId;
      }

      LinearLayout mainlayout = (LinearLayout) rootView;

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.number;
      EditText number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.pin;
      EditText pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.remark;
      EditText remark = ViewBindings.findChildViewById(rootView, id);
      if (remark == null) {
        break missingId;
      }

      id = R.id.sub;
      Button sub = ViewBindings.findChildViewById(rootView, id);
      if (sub == null) {
        break missingId;
      }

      return new BanktransferBinding((LinearLayout) rootView, amount, branch, error, flot,
          mainlayout, name, number, pin, remark, sub);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
