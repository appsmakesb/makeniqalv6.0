// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupNoticeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView NoticeImg;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnNext;

  @NonNull
  public final ImageButton btnPrevious;

  @NonNull
  public final TextView comm;

  @NonNull
  public final TextView mainTv;

  private PopupNoticeBinding(@NonNull RelativeLayout rootView, @NonNull ImageView NoticeImg,
      @NonNull ImageButton btnClose, @NonNull ImageButton btnNext, @NonNull ImageButton btnPrevious,
      @NonNull TextView comm, @NonNull TextView mainTv) {
    this.rootView = rootView;
    this.NoticeImg = NoticeImg;
    this.btnClose = btnClose;
    this.btnNext = btnNext;
    this.btnPrevious = btnPrevious;
    this.comm = comm;
    this.mainTv = mainTv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupNoticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupNoticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup_notice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupNoticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Notice_Img;
      ImageView NoticeImg = ViewBindings.findChildViewById(rootView, id);
      if (NoticeImg == null) {
        break missingId;
      }

      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_next;
      ImageButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_previous;
      ImageButton btnPrevious = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevious == null) {
        break missingId;
      }

      id = R.id.comm;
      TextView comm = ViewBindings.findChildViewById(rootView, id);
      if (comm == null) {
        break missingId;
      }

      id = R.id.main_tv;
      TextView mainTv = ViewBindings.findChildViewById(rootView, id);
      if (mainTv == null) {
        break missingId;
      }

      return new PopupNoticeBinding((RelativeLayout) rootView, NoticeImg, btnClose, btnNext,
          btnPrevious, comm, mainTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
