// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CategoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView buttonAdd;

  @NonNull
  public final CardView buttonDelete;

  @NonNull
  public final CardView buttonEdit;

  @NonNull
  public final ListView listViewCategories;

  private CategoryBinding(@NonNull LinearLayout rootView, @NonNull CardView buttonAdd,
      @NonNull CardView buttonDelete, @NonNull CardView buttonEdit,
      @NonNull ListView listViewCategories) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.listViewCategories = listViewCategories;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add;
      CardView buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.button_delete;
      CardView buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      CardView buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.listView_categories;
      ListView listViewCategories = ViewBindings.findChildViewById(rootView, id);
      if (listViewCategories == null) {
        break missingId;
      }

      return new CategoryBinding((LinearLayout) rootView, buttonAdd, buttonDelete, buttonEdit,
          listViewCategories);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
