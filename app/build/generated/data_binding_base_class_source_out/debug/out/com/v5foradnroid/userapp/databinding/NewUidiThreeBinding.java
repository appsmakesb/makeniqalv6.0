// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.multilibrary.foysaldev.luseen.autolinklibrary.AutoLinkTextView;
import com.v5foradnroid.userapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewUidiThreeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText amount;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final CircleImageView hmNew;

  @NonNull
  public final ImageView iconImg;

  @NonNull
  public final TextInputEditText pin;

  @NonNull
  public final AutoLinkTextView pp;

  @NonNull
  public final TextView showTktv;

  @NonNull
  public final Button sub;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView transactionIdUptv;

  @NonNull
  public final EditText trnx;

  @NonNull
  public final TextInputLayout txtPassword;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  private NewUidiThreeBinding(@NonNull ConstraintLayout rootView, @NonNull EditText amount,
      @NonNull ConstraintLayout constraintLayout2, @NonNull CircleImageView hmNew,
      @NonNull ImageView iconImg, @NonNull TextInputEditText pin, @NonNull AutoLinkTextView pp,
      @NonNull TextView showTktv, @NonNull Button sub, @NonNull TextView textView9,
      @NonNull TextView transactionIdUptv, @NonNull EditText trnx,
      @NonNull TextInputLayout txtPassword, @NonNull View view, @NonNull View view2) {
    this.rootView = rootView;
    this.amount = amount;
    this.constraintLayout2 = constraintLayout2;
    this.hmNew = hmNew;
    this.iconImg = iconImg;
    this.pin = pin;
    this.pp = pp;
    this.showTktv = showTktv;
    this.sub = sub;
    this.textView9 = textView9;
    this.transactionIdUptv = transactionIdUptv;
    this.trnx = trnx;
    this.txtPassword = txtPassword;
    this.view = view;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewUidiThreeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewUidiThreeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.new_uidi_three, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewUidiThreeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      EditText amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.hm_new;
      CircleImageView hmNew = ViewBindings.findChildViewById(rootView, id);
      if (hmNew == null) {
        break missingId;
      }

      id = R.id.icon_img;
      ImageView iconImg = ViewBindings.findChildViewById(rootView, id);
      if (iconImg == null) {
        break missingId;
      }

      id = R.id.pin;
      TextInputEditText pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.pp;
      AutoLinkTextView pp = ViewBindings.findChildViewById(rootView, id);
      if (pp == null) {
        break missingId;
      }

      id = R.id.show_tktv;
      TextView showTktv = ViewBindings.findChildViewById(rootView, id);
      if (showTktv == null) {
        break missingId;
      }

      id = R.id.sub;
      Button sub = ViewBindings.findChildViewById(rootView, id);
      if (sub == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.transaction_id_uptv;
      TextView transactionIdUptv = ViewBindings.findChildViewById(rootView, id);
      if (transactionIdUptv == null) {
        break missingId;
      }

      id = R.id.trnx;
      EditText trnx = ViewBindings.findChildViewById(rootView, id);
      if (trnx == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      TextInputLayout txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new NewUidiThreeBinding((ConstraintLayout) rootView, amount, constraintLayout2, hmNew,
          iconImg, pin, pp, showTktv, sub, textView9, transactionIdUptv, trnx, txtPassword, view,
          view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
