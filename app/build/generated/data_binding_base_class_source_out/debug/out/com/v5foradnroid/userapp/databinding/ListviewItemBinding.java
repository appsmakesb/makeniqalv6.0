// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListviewItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView amountt;

  @NonNull
  public final TextView balance;

  @NonNull
  public final TextView cost;

  @NonNull
  public final TextView fd;

  @NonNull
  public final LinearLayout first;

  @NonNull
  public final ImageView fla;

  @NonNull
  public final LinearLayout four;

  @NonNull
  public final TextView pre;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView to;

  @NonNull
  public final TextView trns;

  @NonNull
  public final TextView type;

  @NonNull
  public final TextView uptime;

  private ListviewItemBinding(@NonNull LinearLayout rootView, @NonNull TextView amountt,
      @NonNull TextView balance, @NonNull TextView cost, @NonNull TextView fd,
      @NonNull LinearLayout first, @NonNull ImageView fla, @NonNull LinearLayout four,
      @NonNull TextView pre, @NonNull TextView status, @NonNull TextView to, @NonNull TextView trns,
      @NonNull TextView type, @NonNull TextView uptime) {
    this.rootView = rootView;
    this.amountt = amountt;
    this.balance = balance;
    this.cost = cost;
    this.fd = fd;
    this.first = first;
    this.fla = fla;
    this.four = four;
    this.pre = pre;
    this.status = status;
    this.to = to;
    this.trns = trns;
    this.type = type;
    this.uptime = uptime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListviewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListviewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.listview_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListviewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountt;
      TextView amountt = ViewBindings.findChildViewById(rootView, id);
      if (amountt == null) {
        break missingId;
      }

      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.cost;
      TextView cost = ViewBindings.findChildViewById(rootView, id);
      if (cost == null) {
        break missingId;
      }

      id = R.id.fd;
      TextView fd = ViewBindings.findChildViewById(rootView, id);
      if (fd == null) {
        break missingId;
      }

      id = R.id.first;
      LinearLayout first = ViewBindings.findChildViewById(rootView, id);
      if (first == null) {
        break missingId;
      }

      id = R.id.fla;
      ImageView fla = ViewBindings.findChildViewById(rootView, id);
      if (fla == null) {
        break missingId;
      }

      id = R.id.four;
      LinearLayout four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.pre;
      TextView pre = ViewBindings.findChildViewById(rootView, id);
      if (pre == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.to;
      TextView to = ViewBindings.findChildViewById(rootView, id);
      if (to == null) {
        break missingId;
      }

      id = R.id.trns;
      TextView trns = ViewBindings.findChildViewById(rootView, id);
      if (trns == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.uptime;
      TextView uptime = ViewBindings.findChildViewById(rootView, id);
      if (uptime == null) {
        break missingId;
      }

      return new ListviewItemBinding((LinearLayout) rootView, amountt, balance, cost, fd, first,
          fla, four, pre, status, to, trns, type, uptime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
