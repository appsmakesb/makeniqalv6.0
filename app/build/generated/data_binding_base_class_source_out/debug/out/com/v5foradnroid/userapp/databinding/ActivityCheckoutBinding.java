// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCheckoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnSubmitOrder;

  @NonNull
  public final EditText edtAddress;

  @NonNull
  public final EditText edtComment;

  @NonNull
  public final EditText edtEmail;

  @NonNull
  public final EditText edtName;

  @NonNull
  public final EditText edtOrderList;

  @NonNull
  public final EditText edtOrderTotal;

  @NonNull
  public final EditText edtPhone;

  @NonNull
  public final EditText edtShipping;

  @NonNull
  public final RelativeLayout lytCheckout;

  @NonNull
  public final LinearLayout lytContent;

  @NonNull
  public final TextView paymentText;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityCheckoutBinding(@NonNull RelativeLayout rootView, @NonNull Button btnSubmitOrder,
      @NonNull EditText edtAddress, @NonNull EditText edtComment, @NonNull EditText edtEmail,
      @NonNull EditText edtName, @NonNull EditText edtOrderList, @NonNull EditText edtOrderTotal,
      @NonNull EditText edtPhone, @NonNull EditText edtShipping,
      @NonNull RelativeLayout lytCheckout, @NonNull LinearLayout lytContent,
      @NonNull TextView paymentText, @NonNull Spinner spinner, @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.btnSubmitOrder = btnSubmitOrder;
    this.edtAddress = edtAddress;
    this.edtComment = edtComment;
    this.edtEmail = edtEmail;
    this.edtName = edtName;
    this.edtOrderList = edtOrderList;
    this.edtOrderTotal = edtOrderTotal;
    this.edtPhone = edtPhone;
    this.edtShipping = edtShipping;
    this.lytCheckout = lytCheckout;
    this.lytContent = lytContent;
    this.paymentText = paymentText;
    this.spinner = spinner;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCheckoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCheckoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_checkout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCheckoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit_order;
      Button btnSubmitOrder = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitOrder == null) {
        break missingId;
      }

      id = R.id.edt_address;
      EditText edtAddress = ViewBindings.findChildViewById(rootView, id);
      if (edtAddress == null) {
        break missingId;
      }

      id = R.id.edt_comment;
      EditText edtComment = ViewBindings.findChildViewById(rootView, id);
      if (edtComment == null) {
        break missingId;
      }

      id = R.id.edt_email;
      EditText edtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edt_name;
      EditText edtName = ViewBindings.findChildViewById(rootView, id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edt_order_list;
      EditText edtOrderList = ViewBindings.findChildViewById(rootView, id);
      if (edtOrderList == null) {
        break missingId;
      }

      id = R.id.edt_order_total;
      EditText edtOrderTotal = ViewBindings.findChildViewById(rootView, id);
      if (edtOrderTotal == null) {
        break missingId;
      }

      id = R.id.edt_phone;
      EditText edtPhone = ViewBindings.findChildViewById(rootView, id);
      if (edtPhone == null) {
        break missingId;
      }

      id = R.id.edt_shipping;
      EditText edtShipping = ViewBindings.findChildViewById(rootView, id);
      if (edtShipping == null) {
        break missingId;
      }

      id = R.id.lyt_checkout;
      RelativeLayout lytCheckout = ViewBindings.findChildViewById(rootView, id);
      if (lytCheckout == null) {
        break missingId;
      }

      id = R.id.lytContent;
      LinearLayout lytContent = ViewBindings.findChildViewById(rootView, id);
      if (lytContent == null) {
        break missingId;
      }

      id = R.id.paymentText;
      TextView paymentText = ViewBindings.findChildViewById(rootView, id);
      if (paymentText == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityCheckoutBinding((RelativeLayout) rootView, btnSubmitOrder, edtAddress,
          edtComment, edtEmail, edtName, edtOrderList, edtOrderTotal, edtPhone, edtShipping,
          lytCheckout, lytContent, paymentText, spinner, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
