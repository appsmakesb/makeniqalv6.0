// Generated by view binder compiler. Do not edit!
package com.v5foradnroid.userapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v5foradnroid.userapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PincBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText cpin;

  @NonNull
  public final LinearLayout mainlayout;

  @NonNull
  public final EditText newPin;

  @NonNull
  public final EditText oldPin;

  @NonNull
  public final Button pinConfirm;

  private PincBinding(@NonNull LinearLayout rootView, @NonNull EditText cpin,
      @NonNull LinearLayout mainlayout, @NonNull EditText newPin, @NonNull EditText oldPin,
      @NonNull Button pinConfirm) {
    this.rootView = rootView;
    this.cpin = cpin;
    this.mainlayout = mainlayout;
    this.newPin = newPin;
    this.oldPin = oldPin;
    this.pinConfirm = pinConfirm;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PincBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PincBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.pinc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PincBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cpin;
      EditText cpin = ViewBindings.findChildViewById(rootView, id);
      if (cpin == null) {
        break missingId;
      }

      LinearLayout mainlayout = (LinearLayout) rootView;

      id = R.id.new_pin;
      EditText newPin = ViewBindings.findChildViewById(rootView, id);
      if (newPin == null) {
        break missingId;
      }

      id = R.id.old_pin;
      EditText oldPin = ViewBindings.findChildViewById(rootView, id);
      if (oldPin == null) {
        break missingId;
      }

      id = R.id.pin_confirm;
      Button pinConfirm = ViewBindings.findChildViewById(rootView, id);
      if (pinConfirm == null) {
        break missingId;
      }

      return new PincBinding((LinearLayout) rootView, cpin, mainlayout, newPin, oldPin, pinConfirm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
